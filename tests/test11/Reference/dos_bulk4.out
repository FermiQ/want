
  ======================================================================
              =                                            =
              =     *** WanT *** Wannier Transport Code    =
              =        (www.wannier-transport.org)         =
              =      Ultra Soft Pseudopotential Implem.    =
              =                                            =
  ======================================================================


  Program <dos>  v. 2.3.0  starts ...
  Date  6Apr2010 at  7:52:52 

     Parallel run, # proc:    6

          BUILT :    Tue Apr  6 07:04:52 2010
           HOST :    x86_64-unknown-linux-gnu
           ARCH :    x86_64
             CC :    icc
            CPP :    cpp
            F90 :    mpif90
            F77 :    ifort
         DFLAGS :    -D__INTEL -D__FFTW -D__MPI -D__PARA
      BLAS LIBS :    -L/home/ferretti/want/install -lmkl_em64t_nothread
    LAPACK LIBS :    
       FFT LIBS :    
      MASS LIBS :    


  checking for fmt wannier90... no
  checking for fmt crystal... no
  checking for fmt qexml... ok

  DFT-data fmt automaticaly detected: qexml

  ======================================================================
  =  INPUT Summary                                                     =
  ======================================================================

                      fileout :     dos_bulk4.dat
                         type :     gaussian
                        delta :     0.05000 eV
                           nk :      1   1 100
                            s :      0   0   0
                        nktot :        100
                         emin :    -10.000
                         emax :     10.000
                           ne :     1000
                       nprint :       50
              compute projdos :     FALSE
                   have sigma :     FALSE

  ======================================================================
  =  Post Processing Init                                              =
  ======================================================================

  WARNING from routine kpoints_allocate:
  too many CPU used

  WARNING from routine kpoints_allocate:
  too many CPU used

  DFT-data read from file: pt4.save/data-file.xml

      Windows data read from file: pt4_WanT.space
     Subspace data read from file: pt4_WanT.space
  Hamiltonian data read from file: pt4_WanT.ham



  ======================================================================
  =  DFT data                                                          =
  ======================================================================

 <LATTICE>
  Alat  =      18.0000000 (Bohr)
  Alat  =       9.5251860 (Ang )
  Omega =    5902.2973417 (Bohr^3)
  Omega =     874.6291829 (Ang^3 )

  Crystal axes:
                in Bohr units                           in Alat units
    a(1) = (   18.00000    0.00000    0.00000 )    (    1.00000    0.00000    0.00000 )
    a(2) = (    0.00000   18.00000    0.00000 )    (    0.00000    1.00000    0.00000 )
    a(3) = (    0.00000    0.00000   18.21697 )    (    0.00000    0.00000    1.01205 )
                in Ang units
    a(1) = (    9.52519    0.00000    0.00000 )
    a(2) = (    0.00000    9.52519    0.00000 )
    a(3) = (    0.00000    0.00000    9.64000 )

   Reciprocal lattice vectors:
                in Bohr^-1 units                        in 2Pi/Alat units
    b(1) = (    0.34907    0.00000    0.00000 )    (    1.00000    0.00000    0.00000 )
    b(2) = (    0.00000    0.34907    0.00000 )    (    0.00000    1.00000    0.00000 )
    b(3) = (    0.00000    0.00000    0.34491 )    (    0.00000    0.00000    0.98809 )
 </LATTICE>

 <K-POINTS>
         nproc =     6   (Parallelism over kpts)
  global nkpts =     4
   local nkpts =     1
  Monkhorst-Pack grid:      nk = (   1   1   4 ),      shift = (   0   0   0 )

  K-point calculation: (cart. coord. in Bohr^-1)
    k (    1) =    (    0.0000000   0.0000000  -0.1724542 ),   weight =      0.2500000
    k (    2) =    (    0.0000000   0.0000000  -0.0862271 ),   weight =      0.2500000
    k (    3) =    (    0.0000000   0.0000000   0.0000000 ),   weight =      0.2500000
    k (    4) =    (    0.0000000   0.0000000   0.0862271 ),   weight =      0.2500000
 </K-POINTS>


  ======================================================================
  =  DOS computation using Wannier Functions                           =
  ======================================================================

  nktot =   100
  Monkhorst-Pack grid:      nk = (   1   1 100 ),      shift = (   0   0   0 )
  Generated kpt mesh: (cart. coord. in Bohr^-1)

    k (    1) =    (   0.00000  0.00000  0.00345 ),    weight =   0.0200000
    k (    2) =    (   0.00000  0.00000  0.00690 ),    weight =   0.0200000
    k (    3) =    (   0.00000  0.00000  0.01035 ),    weight =   0.0200000
    k (    4) =    (   0.00000  0.00000  0.01380 ),    weight =   0.0200000
    k (    5) =    (   0.00000  0.00000  0.01725 ),    weight =   0.0200000
    k (    6) =    (   0.00000  0.00000  0.02069 ),    weight =   0.0200000
    k (    7) =    (   0.00000  0.00000  0.02414 ),    weight =   0.0200000
    k (    8) =    (   0.00000  0.00000  0.02759 ),    weight =   0.0200000
    k (    9) =    (   0.00000  0.00000  0.03104 ),    weight =   0.0200000
    k (   10) =    (   0.00000  0.00000  0.03449 ),    weight =   0.0200000
    k (   11) =    (   0.00000  0.00000  0.03794 ),    weight =   0.0200000
    k (   12) =    (   0.00000  0.00000  0.04139 ),    weight =   0.0200000
    k (   13) =    (   0.00000  0.00000  0.04484 ),    weight =   0.0200000
    k (   14) =    (   0.00000  0.00000  0.04829 ),    weight =   0.0200000
    k (   15) =    (   0.00000  0.00000  0.05174 ),    weight =   0.0200000
    k (   16) =    (   0.00000  0.00000  0.05519 ),    weight =   0.0200000
    k (   17) =    (   0.00000  0.00000  0.05863 ),    weight =   0.0200000
    k (   18) =    (   0.00000  0.00000  0.06208 ),    weight =   0.0200000
    k (   19) =    (   0.00000  0.00000  0.06553 ),    weight =   0.0200000
    k (   20) =    (   0.00000  0.00000  0.06898 ),    weight =   0.0200000
    k (   21) =    (   0.00000  0.00000  0.07243 ),    weight =   0.0200000
    k (   22) =    (   0.00000  0.00000  0.07588 ),    weight =   0.0200000
    k (   23) =    (   0.00000  0.00000  0.07933 ),    weight =   0.0200000
    k (   24) =    (   0.00000  0.00000  0.08278 ),    weight =   0.0200000
    k (   25) =    (   0.00000  0.00000  0.08623 ),    weight =   0.0200000
    k (   26) =    (   0.00000  0.00000  0.08968 ),    weight =   0.0200000
    k (   27) =    (   0.00000  0.00000  0.09313 ),    weight =   0.0200000
    k (   28) =    (   0.00000  0.00000  0.09657 ),    weight =   0.0200000
    k (   29) =    (   0.00000  0.00000  0.10002 ),    weight =   0.0200000
    k (   30) =    (   0.00000  0.00000  0.10347 ),    weight =   0.0200000
    k (   31) =    (   0.00000  0.00000  0.10692 ),    weight =   0.0200000
    k (   32) =    (   0.00000  0.00000  0.11037 ),    weight =   0.0200000
    k (   33) =    (   0.00000  0.00000  0.11382 ),    weight =   0.0200000
    k (   34) =    (   0.00000  0.00000  0.11727 ),    weight =   0.0200000
    k (   35) =    (   0.00000  0.00000  0.12072 ),    weight =   0.0200000
    k (   36) =    (   0.00000  0.00000  0.12417 ),    weight =   0.0200000
    k (   37) =    (   0.00000  0.00000  0.12762 ),    weight =   0.0200000
    k (   38) =    (   0.00000  0.00000  0.13107 ),    weight =   0.0200000
    k (   39) =    (   0.00000  0.00000  0.13451 ),    weight =   0.0200000
    k (   40) =    (   0.00000  0.00000  0.13796 ),    weight =   0.0200000
    k (   41) =    (   0.00000  0.00000  0.14141 ),    weight =   0.0200000
    k (   42) =    (   0.00000  0.00000  0.14486 ),    weight =   0.0200000
    k (   43) =    (   0.00000  0.00000  0.14831 ),    weight =   0.0200000
    k (   44) =    (   0.00000  0.00000  0.15176 ),    weight =   0.0200000
    k (   45) =    (   0.00000  0.00000  0.15521 ),    weight =   0.0200000
    k (   46) =    (   0.00000  0.00000  0.15866 ),    weight =   0.0200000
    k (   47) =    (   0.00000  0.00000  0.16211 ),    weight =   0.0200000
    k (   48) =    (   0.00000  0.00000  0.16556 ),    weight =   0.0200000
    k (   49) =    (   0.00000  0.00000  0.16901 ),    weight =   0.0200000
    k (   50) =    (   0.00000  0.00000 -0.17245 ),    weight =   0.0200000
    k (   51) =    (   0.00000  0.00000 -0.16901 ),    weight =   0.0200000
    k (   52) =    (   0.00000  0.00000 -0.16556 ),    weight =   0.0200000
    k (   53) =    (   0.00000  0.00000 -0.16211 ),    weight =   0.0200000
    k (   54) =    (   0.00000  0.00000 -0.15866 ),    weight =   0.0200000
    k (   55) =    (   0.00000  0.00000 -0.15521 ),    weight =   0.0200000
    k (   56) =    (   0.00000  0.00000 -0.15176 ),    weight =   0.0200000
    k (   57) =    (   0.00000  0.00000 -0.14831 ),    weight =   0.0200000
    k (   58) =    (   0.00000  0.00000 -0.14486 ),    weight =   0.0200000
    k (   59) =    (   0.00000  0.00000 -0.14141 ),    weight =   0.0200000
    k (   60) =    (   0.00000  0.00000 -0.13796 ),    weight =   0.0200000
    k (   61) =    (   0.00000  0.00000 -0.13451 ),    weight =   0.0200000
    k (   62) =    (   0.00000  0.00000 -0.13107 ),    weight =   0.0200000
    k (   63) =    (   0.00000  0.00000 -0.12762 ),    weight =   0.0200000
    k (   64) =    (   0.00000  0.00000 -0.12417 ),    weight =   0.0200000
    k (   65) =    (   0.00000  0.00000 -0.12072 ),    weight =   0.0200000
    k (   66) =    (   0.00000  0.00000 -0.11727 ),    weight =   0.0200000
    k (   67) =    (   0.00000  0.00000 -0.11382 ),    weight =   0.0200000
    k (   68) =    (   0.00000  0.00000 -0.11037 ),    weight =   0.0200000
    k (   69) =    (   0.00000  0.00000 -0.10692 ),    weight =   0.0200000
    k (   70) =    (   0.00000  0.00000 -0.10347 ),    weight =   0.0200000
    k (   71) =    (   0.00000  0.00000 -0.10002 ),    weight =   0.0200000
    k (   72) =    (   0.00000  0.00000 -0.09657 ),    weight =   0.0200000
    k (   73) =    (   0.00000  0.00000 -0.09313 ),    weight =   0.0200000
    k (   74) =    (   0.00000  0.00000 -0.08968 ),    weight =   0.0200000
    k (   75) =    (   0.00000  0.00000 -0.08623 ),    weight =   0.0200000
    k (   76) =    (   0.00000  0.00000 -0.08278 ),    weight =   0.0200000
    k (   77) =    (   0.00000  0.00000 -0.07933 ),    weight =   0.0200000
    k (   78) =    (   0.00000  0.00000 -0.07588 ),    weight =   0.0200000
    k (   79) =    (   0.00000  0.00000 -0.07243 ),    weight =   0.0200000
    k (   80) =    (   0.00000  0.00000 -0.06898 ),    weight =   0.0200000
    k (   81) =    (   0.00000  0.00000 -0.06553 ),    weight =   0.0200000
    k (   82) =    (   0.00000  0.00000 -0.06208 ),    weight =   0.0200000
    k (   83) =    (   0.00000  0.00000 -0.05863 ),    weight =   0.0200000
    k (   84) =    (   0.00000  0.00000 -0.05519 ),    weight =   0.0200000
    k (   85) =    (   0.00000  0.00000 -0.05174 ),    weight =   0.0200000
    k (   86) =    (   0.00000  0.00000 -0.04829 ),    weight =   0.0200000
    k (   87) =    (   0.00000  0.00000 -0.04484 ),    weight =   0.0200000
    k (   88) =    (   0.00000  0.00000 -0.04139 ),    weight =   0.0200000
    k (   89) =    (   0.00000  0.00000 -0.03794 ),    weight =   0.0200000
    k (   90) =    (   0.00000  0.00000 -0.03449 ),    weight =   0.0200000
    k (   91) =    (   0.00000  0.00000 -0.03104 ),    weight =   0.0200000
    k (   92) =    (   0.00000  0.00000 -0.02759 ),    weight =   0.0200000
    k (   93) =    (   0.00000  0.00000 -0.02414 ),    weight =   0.0200000
    k (   94) =    (   0.00000  0.00000 -0.02069 ),    weight =   0.0200000
    k (   95) =    (   0.00000  0.00000 -0.01725 ),    weight =   0.0200000
    k (   96) =    (   0.00000  0.00000 -0.01380 ),    weight =   0.0200000
    k (   97) =    (   0.00000  0.00000 -0.01035 ),    weight =   0.0200000
    k (   98) =    (   0.00000  0.00000 -0.00690 ),    weight =   0.0200000
    k (   99) =    (   0.00000  0.00000 -0.00345 ),    weight =   0.0200000
    k (  100) =    (   0.00000  0.00000  0.00000 ),    weight =   0.0200000


  ======================================================================
  =  Loop over energies                                                =
  ======================================================================

  Computing E(     1 ) =    -10.00000 eV
                              Total time spent up to now :     0.09 secs

  Computing E(    50 ) =     -9.01902 eV
                              Total time spent up to now :     0.10 secs

  Computing E(   100 ) =     -8.01802 eV
                              Total time spent up to now :     0.11 secs

  Computing E(   150 ) =     -7.01702 eV
                              Total time spent up to now :     0.13 secs

  Computing E(   200 ) =     -6.01602 eV
                              Total time spent up to now :     0.14 secs

  Computing E(   250 ) =     -5.01502 eV
                              Total time spent up to now :     0.15 secs

  Computing E(   300 ) =     -4.01401 eV
                              Total time spent up to now :     0.16 secs

  Computing E(   350 ) =     -3.01301 eV
                              Total time spent up to now :     0.17 secs

  Computing E(   400 ) =     -2.01201 eV
                              Total time spent up to now :     0.19 secs

  Computing E(   450 ) =     -1.01101 eV
                              Total time spent up to now :     0.20 secs

  Computing E(   500 ) =     -0.01001 eV
                              Total time spent up to now :     0.21 secs

  Computing E(   550 ) =      0.99099 eV
                              Total time spent up to now :     0.22 secs

  Computing E(   600 ) =      1.99199 eV
                              Total time spent up to now :     0.24 secs

  Computing E(   650 ) =      2.99299 eV
                              Total time spent up to now :     0.25 secs

  Computing E(   700 ) =      3.99399 eV
                              Total time spent up to now :     0.26 secs

  Computing E(   750 ) =      4.99499 eV
                              Total time spent up to now :     0.27 secs

  Computing E(   800 ) =      5.99600 eV
                              Total time spent up to now :     0.29 secs

  Computing E(   850 ) =      6.99700 eV
                              Total time spent up to now :     0.30 secs

  Computing E(   900 ) =      7.99800 eV
                              Total time spent up to now :     0.31 secs

  Computing E(   950 ) =      8.99900 eV
                              Total time spent up to now :     0.32 secs

  Computing E(  1000 ) =     10.00000 eV
                              Total time spent up to now :     0.34 secs


  Total DOS written on file:    dos_bulk4.dat

  ======================================================================

   <global routines>
             clock number :    10

                      dos :     0.00s CPU 

                dos_input :     0.05s CPU
            postproc_init :     0.03s CPU
             want_dftread :     0.01s CPU
                want_init :     0.00s CPU
       para_get_poolindex :     0.00s CPU (       4 calls,   0.000 s avg)
             windows_read :     0.00s CPU
            subspace_read :     0.00s CPU
                   do_dos :     0.48s CPU
             compute_kham :     0.00s CPU (      17 calls,   0.000 s avg)


