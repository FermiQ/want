
  ======================================================================
              =                                            =
              =     *** WanT *** Wannier Transport Code    =
              =        (www.wannier-transport.org)         =
              =      Ultra Soft Pseudopotential Implem.    =
              =                                            =
  ======================================================================


  Program <dos>  v. 2.4.0alpha2  starts ...
  Date  8Oct2010 at 20:11:29 

     Parallel run, # proc:    6

          BUILT :    Tue Oct  5 05:18:51 2010
           HOST :    x86_64-unknown-linux-gnu
           ARCH :    x86_64
             CC :    icc
            CPP :    cpp
            F90 :    mpif90
            F77 :    ifort
         DFLAGS :    -D__INTEL -D__FFTW -D__MPI -D__PARA -D__ETSF_IO -D__NETCDF
      BLAS LIBS :    -L/home/ferretti/want/install -lmkl_em64t_nothread
    LAPACK LIBS :    
       FFT LIBS :    
      MASS LIBS :    


  checking for fmt internal... no
  checking for fmt wannier90... no
  checking for fmt crystal... no
  checking for fmt qexml... ok

  DFT-data fmt automaticaly detected: qexml

  ======================================================================
  =  INPUT Summary                                                     =
  ======================================================================

                      fileout :     dos.dat
                         type :     gaussian
                        delta :     0.15000 eV
                           nk :      1   1 100
                            s :      0   0   0
                        nktot :        100
                         emin :    -10.000
                         emax :     10.000
                           ne :     1000
                       nprint :       50
              compute projdos :     TRUE
                   have sigma :     FALSE

  ======================================================================
  =  Post Processing Init                                              =
  ======================================================================

  WARNING from routine kpoints_allocate:
  too many CPU used

  WARNING from routine kpoints_allocate:
  too many CPU used

  DFT-data read from file: au_bda.save/data-file.xml

      Windows data read from file: au_bda_WanT.space
     Subspace data read from file: au_bda_WanT.space
  Hamiltonian data read from file: au_bda_WanT.ham



  ======================================================================
  =  DFT data                                                          =
  ======================================================================

 <LATTICE>
  Alat  =      15.0000000 (Bohr)
  Alat  =       7.9376550 (Ang )
  Omega =   12219.9074851 (Bohr^3)
  Omega =    1810.8012998 (Ang^3 )

  Crystal axes:
                in Bohr units                           in Alat units
    a(1) = (   15.00000    0.00000    0.00000 )    (    1.00000    0.00000    0.00000 )
    a(2) = (    0.00000   15.00000    0.00000 )    (    0.00000    1.00000    0.00000 )
    a(3) = (    0.00000    0.00000   54.31070 )    (    0.00000    0.00000    3.62071 )
                in Ang units
    a(1) = (    7.93766    0.00000    0.00000 )
    a(2) = (    0.00000    7.93766    0.00000 )
    a(3) = (    0.00000    0.00000   28.73997 )

   Reciprocal lattice vectors:
                in Bohr^-1 units                        in 2Pi/Alat units
    b(1) = (    0.41888    0.00000    0.00000 )    (    1.00000    0.00000    0.00000 )
    b(2) = (    0.00000    0.41888    0.00000 )    (    0.00000    1.00000    0.00000 )
    b(3) = (    0.00000    0.00000    0.11569 )    (    0.00000    0.00000    0.27619 )
 </LATTICE>

 <K-POINTS>
         nproc =     6   (Parallelism over kpts)
  global nkpts =     4
   local nkpts =     1
  Monkhorst-Pack grid:      nk = (   1   1   4 ),      shift = (   0   0   1 )

  K-point grid: (cart. coord. in Bohr^-1)
    k (    1) =    (    0.0000000   0.0000000   0.0144612 ),   weight =      0.2500000
    k (    2) =    (    0.0000000   0.0000000   0.0433836 ),   weight =      0.2500000
    k (    3) =    (    0.0000000   0.0000000  -0.0433836 ),   weight =      0.2500000
    k (    4) =    (    0.0000000   0.0000000  -0.0144612 ),   weight =      0.2500000
 </K-POINTS>

 <R-GRID>
         nrtot =     5
  R-grid generators:      nr = (   1   1   4 )

  R-grid vectors:         (crystal units)
    R (    1) =    (       0      0     -1 ),   wr =      1.0000000
    R (    2) =    (       0      0      0 ),   wr =      1.0000000
    R (    3) =    (       0      0      1 ),   wr =      1.0000000
    R (    4) =    (       0      0      2 ),   wr =      0.5000000
    R (    5) =    (       0      0     -2 ),   wr =      0.5000000
 </R-GRID>


  ======================================================================
  =  DOS computation using Wannier Functions                           =
  ======================================================================

  nktot =   100
  Monkhorst-Pack grid:      nk = (   1   1 100 ),      shift = (   0   0   0 )
  Generated kpt mesh: (cart. coord. in Bohr^-1)

    k (    1) =    (   0.00000  0.00000  0.00116 ),    weight =   0.0100000
    k (    2) =    (   0.00000  0.00000  0.00231 ),    weight =   0.0100000
    k (    3) =    (   0.00000  0.00000  0.00347 ),    weight =   0.0100000
    k (    4) =    (   0.00000  0.00000  0.00463 ),    weight =   0.0100000
    k (    5) =    (   0.00000  0.00000  0.00578 ),    weight =   0.0100000
    k (    6) =    (   0.00000  0.00000  0.00694 ),    weight =   0.0100000
    k (    7) =    (   0.00000  0.00000  0.00810 ),    weight =   0.0100000
    k (    8) =    (   0.00000  0.00000  0.00926 ),    weight =   0.0100000
    k (    9) =    (   0.00000  0.00000  0.01041 ),    weight =   0.0100000
    k (   10) =    (   0.00000  0.00000  0.01157 ),    weight =   0.0100000
    k (   11) =    (   0.00000  0.00000  0.01273 ),    weight =   0.0100000
    k (   12) =    (   0.00000  0.00000  0.01388 ),    weight =   0.0100000
    k (   13) =    (   0.00000  0.00000  0.01504 ),    weight =   0.0100000
    k (   14) =    (   0.00000  0.00000  0.01620 ),    weight =   0.0100000
    k (   15) =    (   0.00000  0.00000  0.01735 ),    weight =   0.0100000
    k (   16) =    (   0.00000  0.00000  0.01851 ),    weight =   0.0100000
    k (   17) =    (   0.00000  0.00000  0.01967 ),    weight =   0.0100000
    k (   18) =    (   0.00000  0.00000  0.02082 ),    weight =   0.0100000
    k (   19) =    (   0.00000  0.00000  0.02198 ),    weight =   0.0100000
    k (   20) =    (   0.00000  0.00000  0.02314 ),    weight =   0.0100000
    k (   21) =    (   0.00000  0.00000  0.02429 ),    weight =   0.0100000
    k (   22) =    (   0.00000  0.00000  0.02545 ),    weight =   0.0100000
    k (   23) =    (   0.00000  0.00000  0.02661 ),    weight =   0.0100000
    k (   24) =    (   0.00000  0.00000  0.02777 ),    weight =   0.0100000
    k (   25) =    (   0.00000  0.00000  0.02892 ),    weight =   0.0100000
    k (   26) =    (   0.00000  0.00000  0.03008 ),    weight =   0.0100000
    k (   27) =    (   0.00000  0.00000  0.03124 ),    weight =   0.0100000
    k (   28) =    (   0.00000  0.00000  0.03239 ),    weight =   0.0100000
    k (   29) =    (   0.00000  0.00000  0.03355 ),    weight =   0.0100000
    k (   30) =    (   0.00000  0.00000  0.03471 ),    weight =   0.0100000
    k (   31) =    (   0.00000  0.00000  0.03586 ),    weight =   0.0100000
    k (   32) =    (   0.00000  0.00000  0.03702 ),    weight =   0.0100000
    k (   33) =    (   0.00000  0.00000  0.03818 ),    weight =   0.0100000
    k (   34) =    (   0.00000  0.00000  0.03933 ),    weight =   0.0100000
    k (   35) =    (   0.00000  0.00000  0.04049 ),    weight =   0.0100000
    k (   36) =    (   0.00000  0.00000  0.04165 ),    weight =   0.0100000
    k (   37) =    (   0.00000  0.00000  0.04281 ),    weight =   0.0100000
    k (   38) =    (   0.00000  0.00000  0.04396 ),    weight =   0.0100000
    k (   39) =    (   0.00000  0.00000  0.04512 ),    weight =   0.0100000
    k (   40) =    (   0.00000  0.00000  0.04628 ),    weight =   0.0100000
    k (   41) =    (   0.00000  0.00000  0.04743 ),    weight =   0.0100000
    k (   42) =    (   0.00000  0.00000  0.04859 ),    weight =   0.0100000
    k (   43) =    (   0.00000  0.00000  0.04975 ),    weight =   0.0100000
    k (   44) =    (   0.00000  0.00000  0.05090 ),    weight =   0.0100000
    k (   45) =    (   0.00000  0.00000  0.05206 ),    weight =   0.0100000
    k (   46) =    (   0.00000  0.00000  0.05322 ),    weight =   0.0100000
    k (   47) =    (   0.00000  0.00000  0.05437 ),    weight =   0.0100000
    k (   48) =    (   0.00000  0.00000  0.05553 ),    weight =   0.0100000
    k (   49) =    (   0.00000  0.00000  0.05669 ),    weight =   0.0100000
    k (   50) =    (   0.00000  0.00000 -0.05784 ),    weight =   0.0100000
    k (   51) =    (   0.00000  0.00000 -0.05669 ),    weight =   0.0100000
    k (   52) =    (   0.00000  0.00000 -0.05553 ),    weight =   0.0100000
    k (   53) =    (   0.00000  0.00000 -0.05437 ),    weight =   0.0100000
    k (   54) =    (   0.00000  0.00000 -0.05322 ),    weight =   0.0100000
    k (   55) =    (   0.00000  0.00000 -0.05206 ),    weight =   0.0100000
    k (   56) =    (   0.00000  0.00000 -0.05090 ),    weight =   0.0100000
    k (   57) =    (   0.00000  0.00000 -0.04975 ),    weight =   0.0100000
    k (   58) =    (   0.00000  0.00000 -0.04859 ),    weight =   0.0100000
    k (   59) =    (   0.00000  0.00000 -0.04743 ),    weight =   0.0100000
    k (   60) =    (   0.00000  0.00000 -0.04628 ),    weight =   0.0100000
    k (   61) =    (   0.00000  0.00000 -0.04512 ),    weight =   0.0100000
    k (   62) =    (   0.00000  0.00000 -0.04396 ),    weight =   0.0100000
    k (   63) =    (   0.00000  0.00000 -0.04281 ),    weight =   0.0100000
    k (   64) =    (   0.00000  0.00000 -0.04165 ),    weight =   0.0100000
    k (   65) =    (   0.00000  0.00000 -0.04049 ),    weight =   0.0100000
    k (   66) =    (   0.00000  0.00000 -0.03933 ),    weight =   0.0100000
    k (   67) =    (   0.00000  0.00000 -0.03818 ),    weight =   0.0100000
    k (   68) =    (   0.00000  0.00000 -0.03702 ),    weight =   0.0100000
    k (   69) =    (   0.00000  0.00000 -0.03586 ),    weight =   0.0100000
    k (   70) =    (   0.00000  0.00000 -0.03471 ),    weight =   0.0100000
    k (   71) =    (   0.00000  0.00000 -0.03355 ),    weight =   0.0100000
    k (   72) =    (   0.00000  0.00000 -0.03239 ),    weight =   0.0100000
    k (   73) =    (   0.00000  0.00000 -0.03124 ),    weight =   0.0100000
    k (   74) =    (   0.00000  0.00000 -0.03008 ),    weight =   0.0100000
    k (   75) =    (   0.00000  0.00000 -0.02892 ),    weight =   0.0100000
    k (   76) =    (   0.00000  0.00000 -0.02777 ),    weight =   0.0100000
    k (   77) =    (   0.00000  0.00000 -0.02661 ),    weight =   0.0100000
    k (   78) =    (   0.00000  0.00000 -0.02545 ),    weight =   0.0100000
    k (   79) =    (   0.00000  0.00000 -0.02429 ),    weight =   0.0100000
    k (   80) =    (   0.00000  0.00000 -0.02314 ),    weight =   0.0100000
    k (   81) =    (   0.00000  0.00000 -0.02198 ),    weight =   0.0100000
    k (   82) =    (   0.00000  0.00000 -0.02082 ),    weight =   0.0100000
    k (   83) =    (   0.00000  0.00000 -0.01967 ),    weight =   0.0100000
    k (   84) =    (   0.00000  0.00000 -0.01851 ),    weight =   0.0100000
    k (   85) =    (   0.00000  0.00000 -0.01735 ),    weight =   0.0100000
    k (   86) =    (   0.00000  0.00000 -0.01620 ),    weight =   0.0100000
    k (   87) =    (   0.00000  0.00000 -0.01504 ),    weight =   0.0100000
    k (   88) =    (   0.00000  0.00000 -0.01388 ),    weight =   0.0100000
    k (   89) =    (   0.00000  0.00000 -0.01273 ),    weight =   0.0100000
    k (   90) =    (   0.00000  0.00000 -0.01157 ),    weight =   0.0100000
    k (   91) =    (   0.00000  0.00000 -0.01041 ),    weight =   0.0100000
    k (   92) =    (   0.00000  0.00000 -0.00926 ),    weight =   0.0100000
    k (   93) =    (   0.00000  0.00000 -0.00810 ),    weight =   0.0100000
    k (   94) =    (   0.00000  0.00000 -0.00694 ),    weight =   0.0100000
    k (   95) =    (   0.00000  0.00000 -0.00578 ),    weight =   0.0100000
    k (   96) =    (   0.00000  0.00000 -0.00463 ),    weight =   0.0100000
    k (   97) =    (   0.00000  0.00000 -0.00347 ),    weight =   0.0100000
    k (   98) =    (   0.00000  0.00000 -0.00231 ),    weight =   0.0100000
    k (   99) =    (   0.00000  0.00000 -0.00116 ),    weight =   0.0100000
    k (  100) =    (   0.00000  0.00000  0.00000 ),    weight =   0.0100000


  ======================================================================
  =  Loop over energies                                                =
  ======================================================================

  Computing E(     1 ) =    -10.00000 eV
                              Total time spent up to now :     0.48 secs

  Computing E(    50 ) =     -9.01902 eV
                              Total time spent up to now :     0.59 secs

  Computing E(   100 ) =     -8.01802 eV
                              Total time spent up to now :     0.67 secs

  Computing E(   150 ) =     -7.01702 eV
                              Total time spent up to now :     0.80 secs

  Computing E(   200 ) =     -6.01602 eV
                              Total time spent up to now :     0.87 secs

  Computing E(   250 ) =     -5.01502 eV
                              Total time spent up to now :     1.01 secs

  Computing E(   300 ) =     -4.01401 eV
                              Total time spent up to now :     1.12 secs

  Computing E(   350 ) =     -3.01301 eV
                              Total time spent up to now :     1.20 secs

  Computing E(   400 ) =     -2.01201 eV
                              Total time spent up to now :     1.27 secs

  Computing E(   450 ) =     -1.01101 eV
                              Total time spent up to now :     1.44 secs

  Computing E(   500 ) =     -0.01001 eV
                              Total time spent up to now :     1.51 secs

  Computing E(   550 ) =      0.99099 eV
                              Total time spent up to now :     1.64 secs

  Computing E(   600 ) =      1.99199 eV
                              Total time spent up to now :     1.76 secs

  Computing E(   650 ) =      2.99299 eV
                              Total time spent up to now :     1.84 secs

  Computing E(   700 ) =      3.99399 eV
                              Total time spent up to now :     1.96 secs

  Computing E(   750 ) =      4.99499 eV
                              Total time spent up to now :     2.13 secs

  Computing E(   800 ) =      5.99600 eV
                              Total time spent up to now :     2.21 secs

  Computing E(   850 ) =      6.99700 eV
                              Total time spent up to now :     2.28 secs

  Computing E(   900 ) =      7.99800 eV
                              Total time spent up to now :     2.44 secs

  Computing E(   950 ) =      8.99900 eV
                              Total time spent up to now :     2.51 secs

  Computing E(  1000 ) =     10.00000 eV
                              Total time spent up to now :     2.59 secs


  Computing projected-DOS...


  Total DOS written on file:    dos.dat

  ======================================================================

   <global routines>
             clock number :    10

                      dos :    16.00s CPU 

                dos_input :     0.08s CPU
            postproc_init :     0.27s CPU
             want_dftread :     0.02s CPU
                want_init :     0.00s CPU
       para_get_poolindex :     0.00s CPU (       4 calls,   0.000 s avg)
             windows_read :     0.00s CPU
            subspace_read :     0.00s CPU
                   do_dos :    16.17s CPU
             compute_kham :     0.01s CPU (      17 calls,   0.000 s avg)


