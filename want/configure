#! /bin/sh
#
# This script is a simple wrapper calling the autoconf configuration
# script (configure) in conf/
# Dependencies may be also directly generated 
#
##================================================================
##
#MANUAL=" Usage
#   configure [-h, --help] [<conf_flags>]
#
# -h, --help           print this manual    
# <conf_flags>         these flags will be passed to 
#                      the autoconf configure
#
# After configuration, the make.sys file will created in the
# WanT home (current) directory
# 
#"
##
##================================================================
#


# run from directory where this script is
auxdir=`echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
if [ "$auxdir" != "configure" ] ; then cd $auxdir ; fi


#
# detect what to do
#
configure=yes

##
#case $1 in
#  ("-c" | "--conf" )      configure=yes  ;;
#  ("-h" | "--help" )      help=yes ;;
#  (*)                     configure=yes ;;
#esac

##
## print manual
##
#if [ "$help" = "yes" ] ; then
#   echo "$MANUAL"  ; exit 0 
#fi


#
# run the autoconf configure with the
# given cong_flags
#
if [ "$configure" = "yes" ] ; then

   test -e ./make.sys               && rm ./make.sys
   test -e ./conf/make.sys          && rm ./conf/make.sys
   test -e ./conf/configure.msg     && rm ./conf/configure.msg
   test -e ./include/configure.h    && rm ./include/configure.h
   test -e ./include/iotk_config.h  && rm ./include/iotk_config.h
   test -e ./include/ctools.h       && rm ./include/ctools.h
   test -e ./include/fft_defs.h     && rm ./include/fft_defs.h

   CFLAGS=$*
   ./conf/configure $CFLAGS

   #
   # copy make.sys in the home dir
   # and final clean up
   #
   test -e ./conf/make.sys     && mv ./conf/make.sys    .
   test -e config.log          && mv config.log         ./conf/
   test -e config.status       && mv config.status      ./conf/
   test -e configure.msg       && mv configure.msg      ./conf/
   test -e *.lineno            && mv *.lineno           ./conf/
   #
fi


exit 0





