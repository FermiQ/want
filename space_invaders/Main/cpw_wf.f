      PROGRAM CPW2000
C
C      TOTAL ENERGY PLANE WAVE CALCULATION
C
C      COPYRIGHT JOSE LUIS MARTINS/INESC
C      MAY BE USED FOR RESEARCH PURPOSES ONLY
C
       IMPLICIT NONE
C
       INCLUDE 'dimension.inc'
C
C      VERSION 4.38   25/7/00
C
C      ARRAY DIMENSIONS
C      ****************
C
C      SHOULD BE ADAPTED FOR EACH TYPE OF CALCULATION!!!!!!!!!!!!!!!!
C
C      MXDTYP      ARRAY DIMENSION FOR TYPE OF ATOMS
C      MXDATM      ARRAY DIMENSION FOR ATOMS OF A GIVEN TYPE
C      MXDGVE      ARRAY DIMENSION FOR G-SPACE VECTORS
C      MXDNST      ARRAY DIMENSION FOR G-SPACE STARS
C      MXDCUB      ARRAY DIMENSION FOR 3-INDEX G-SPACE
C      MXDLQP      ARRAY DIMENSION FOR LOCAL POTENTIAL
C      MXDFFT      ARRAY DIMENSION FOR FFT
C      MXDWRK      ARRAY DIMENSION FOR WORK VECTOR IN FFT
C      MXDNRK      ARRAY DIMENSION FOR K-POINTS
C      MXDBND      ARRAY DIMENSION FOR BANDS
C      MXDPNT      ARRAY DIMENSION FOR UNSYMMETRIZED K-POINTS
C      MXDDIM      ARRAY DIMENSION OF HAMILTONIAN ROWS
C      MXDUPD      ARRAY DIMENSION FOR JACOBIAN UPDATE
C      MXDSCF      ARRAY DIMENSIONS OF OLD SCF-ITERATION INFORMATION
C      MXDSML      ARRAY DIMENSION OF ITERATIVE SPACE
C
C
C      PROGRAM OPTIONS
C      ***************
C
C      SHOULD BE CHECKED INSIDE THE MAIN PROGRAM
C
C      VDRIV       VERSION OF THIS PROGRAM
C      ICORR       EXCHANGE-CORRELATION CHOICE
C      FLGDAL      CONTROLS USE OF DUAL APPROXIMATION
C      IPRGLOB     LEVEL OF DETAIL OF PRINTOUT
C      ITMAX       MAXIMUM NUMBER OF SELF-CONSISTENT ITERATIONS
C      EPSCV       CONVERGENCE CRITERIUM FOR SELF-CONSISTENCY
C      EPSPSI      CONVERGENCE CRITERIUM FOR DIAGONALIZATION
C      TELECK      TEMPERATURE OF ELECTRONS (KELVIN)
C      WANNIER     WRITE OUTPUT FOR WANNIER FUNCTION CALCULATION (0=NO,1=YES)
C
       INTEGER WANNIER
C
       CHARACTER*4 VDRIV
       CHARACTER*2 ICORR
       CHARACTER*4 FLGDAL
       INTEGER IPRGLOB
       REAL*8 EPSCV,EPSPSI,TELECK
C
C      CRYSTAL STRUCTURE
C      *****************
C
C      ADOT(I,J)   METRIC IN DIRECT SPACE
C      NTYPE       NUMBER OF TYPES OF ATOMS
C      NATOM(I)    NUMBER OF ATOMS OF TYPE I
C      NAMEAT(I)   CHEMICAL SYMBOL FOR THE TYPE I
C      RAT(K,N,I)  K-TH COMPONENT (IN CONTRAVARIANT LATTICE COORDINATES)
C                  OF THE POSITION OF THE N-TH ATOM OF TYPE I
C      ATMASS(I)   ATOMIC MASS (IN A.U.) OF ATOM OF TYPE I
C
       REAL*8 ADOT(3,3),RAT(3,MXDATM,MXDTYP),ATMASS(MXDTYP)
       INTEGER NTYPE,NATOM(MXDTYP)
       CHARACTER*2 NAMEAT(MXDTYP)
C
C      SPACE GROUP INFORMATION
C      ***********************
C
C      NTRANS      NUMBER OF SYMMETRY OPERATIONS IN THE FACTOR GROUP
C      MTRX(I,J,K) ROTATION MATRIX (IN RECIPROCAL LATTICE COORDINATES)
C                  FOR THE K-TH SYMMETRY OPERATION OF THE FACTOR GROUP
C      TNP(I,K)    2*PI* I-TH COMPONENT (IN LATTICE COORDINATES) OF THE
C                  FRACTIONAL TRANSLATION VECTOR ASSOCIATED WITH THE
C                  K-TH SYMMETRY OPERATION OF THE FACTOR GROUP
C
       INTEGER NTRANS,MTRX(3,3,48)
       REAL*8 TNP(3,48)
C
C      RECIPROCAL SPACE
C      ****************
C
C      EMAX        KINETIC ENERGY CUTOFF OF PLANE WAVE EXPANSION (HARTREE).
C      NG          TOTAL NUMBER OF G-VECTORS WITH LENGTH LESS THAN GMAX
C      KGV(I,N)    I-TH COMPONENT (RECIPROCAL LATTICE COORDINATES) OF
C                  THE N-TH G-VECTOR ORDERED BY STARS OF INCREASING LENGTH
C      PHASER(N)   REAL PART OF THE PHASE FACTOR OF G-VECTOR N
C      PHASEI(N)   IMAGINARY PART OF THE PHASE FACTOR OF G-VECTOR N
C      CONJ(N)     IS -1 IF ONE MUST TAKE THE COMPLEX CONJUGATE OF X*PHASE
C      INDS(N)     STAR TO WHICH G-VECTOR N BELONGS
C      KMAX(I)     MAX VALUE OF KGV(I,N)
C      INDV(JADD)  KGV(I,INDV(JADD)) IS THE G-VECTOR ASSOCIATED WITH JADD
C                  JADD IS DEFINED BY THE G-VECTOR COMPONENTS AND KMAX
C      NS          NUMBER OS STARS WITH LENGTH LESS THAN GMAX
C      MSTAR(J)    NUMBER OF G-VECTORS IN THE J-TH STAR
C      EK(J)       KINETIC ENERGY (RYDBERG) OF G-VECTORS IN STAR J
C      IZSTAR(J)   IS 0 IF THE PHASE=0
C
       REAL*8 EMAX
       INTEGER NG,NS
       INTEGER KGV(3,MXDGVE),INDS(MXDGVE),KMAX(3),INDV(MXDCUB)
       INTEGER MSTAR(MXDNST),IZSTAR(MXDNST)
       REAL*8 PHASER(MXDGVE),PHASEI(MXDGVE),EK(MXDNST),CONJ(MXDGVE)
C
C      STRUCTURE FACTORS
C      *****************
C
C      SR(K,I)     REAL PART OF THE STRUCTURE FACTOR FOR ATOM K AND STAR I
C      SI(K,I)     IMAGINARY PART OF THE STRUCTURE FACTOR
C      ICMPLX      INDICATES IF THE STRUCTURE FACTOR IS COMPLEX
C
       INTEGER ICMPLX
       REAL*8 SR(MXDTYP,MXDNST),SI(MXDTYP,MXDNST)
C
C      CHARGE DENSITIES
C      ****************
C
C      DENR(J)     REAL PART OF THE TOTAL CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENI(J)     IMAGINARY PART OF THE TOTAL CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENCR(J)    REAL PART OF THE CORE CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENCI(J)    IMAGINARY PART OF THE CORE CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENSR(J)    REAL PART OF THE SPHERICAL ATOMIC VALENCE CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENSI(J)    IMAGINARY PART OF THE SPHERICAL ATOMIC VALENCE CHARGE DENSITY FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENKR(J)    REAL PART OF THE CHARGE DENSITY FOR A GIVEN K-POINT
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      DENKI(J)    IMAGINARY PART OF THE CHARGE DENSITY FOR A GIVEN K-POINT
C                  THE PROTOTYPE G-VECTOR IN STAR J
C
       REAL*8 DENR(MXDNST),DENI(MXDNST),DENKR(MXDNST),DENKI(MXDNST)
       REAL*8 DENCR(MXDNST),DENCI(MXDNST),DENSR(MXDNST),DENSI(MXDNST)
C
C      LOCAL POTENTIAL CONTRIBUTIONS
C      *****************************
C
C      VIONR(J)    REAL PART OF THE IONIC POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VIONI(J)    IMAGINARY PART OF THE IONIC POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VHARR(J)    REAL PART OF THE HARTREE POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VHARI(J)    IMAGINARY PART OF THE HARTREE POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VXCR(J)     REAL PART OF THE EXCHANGE+CORRELATION POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VXCI(J)     IMAGINARY PART OF THE EXCHANGE+CORRELATION POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VHXCR(J)    REAL PART OF THE HARTREE+EXCHANGE+CORRELATION POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VHXCI(J)    IMAGINARY PART OF THE HARTREE+EXCHANGE+CORRELATION  POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VEFFR(J)    REAL PART OF THE EFECTIVE POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VEFFI(J)    IMAGINARY PART OF THE EFECTIVE POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J
C      VHXCOUTR(J) REAL PART OF THE HARTREE+EXCHANGE+CORRELATION POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J (OUTPUT OF SCF)
C      VHXCOUTI(J) IMAGINARY PART OF THE HARTREE+EXCHANGE+CORRELATION  POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J (OUTPUT OF SCF)
C      DELVHXCR(J) CHANGE IN REAL PART OF THE HARTREE+EXCHANGE+CORRELATION POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J GIVEN BY MIXER
C      DELVHXCI(J) CHANGE IN  IMAGINARY PART OF THE HARTREE+EXCHANGE+CORRELATION  POTENTIAL FOR
C                  THE PROTOTYPE G-VECTOR IN STAR J GIVEN BY MIXER
C      
       REAL*8 VIONR(MXDNST),VIONI(MXDNST),VHARR(MXDNST),VHARI(MXDNST)
       REAL*8 VHXCR(MXDNST),VHXCI(MXDNST),VXCR(MXDNST),VXCI(MXDNST)
       REAL*8 VEFFR(MXDNST),VEFFI(MXDNST)
       REAL*8 VHXCOUTR(MXDNST),VHXCOUTI(MXDNST)
       REAL*8 DELVHXCR(MXDNST),DELVHXCI(MXDNST)
C
C      PSEUDO-POTENTIAL (KLEINMAN-BYLANDER)
C      ************************************
C
C      EALRAW      G=0 CONTRIB. TO THE TOTAL ENERGY. (NON NORM. TO VCELL,HARTREE)
C      ZV(I)       VALENCE OF ATOM WITH TYPE I
C      ZTOT        TOTAL CHARGE DENSITY (ELECTRONS/CELL)
C      NQ(K)       NUMBER OF POINTS FOR PSEUDO INTERPOLATION FOR ATOM K
C      DELQ(K)     STEP USED IN THE INTERPOLATION FOR ATOM K
C      VKBRAW(I,L,K) KB NONLOCAL PSEUDO. FOR ATOM K, ANG. MOM. L-1 
C                  (NON NORMALIZED TO VCELL, HARTREE)
C      NKB(L,K)    KB PSEUDO.  NORMALIZATION FOR ATOM K, ANG. MOM. L-1
C      VLOC(I,K)   LOCAL PSEUDOPOTENTIAL FOR ATOM K (HARTREE)
C      DCOR(I,K)   CORE CHARGE DENSITY FOR ATOM K
C      DVAL(I,K)   VALENCE CHARGE DENSITY FOR ATOM K
C
       REAL*8 EALRAW,ZTOT
       INTEGER NQ(MXDTYP)
       REAL*8 DELQ(MXDTYP),VKBRAW(MXDLQP,4,MXDTYP),ZV(MXDTYP)
       INTEGER NKB(4,MXDTYP)
       REAL*8 VLOC(MXDLQP,MXDTYP),DCOR(MXDLQP,MXDTYP)
       REAL*8 DVAL(MXDLQP,MXDTYP)
C
C      LOCAL PSEUDOPOTENTIAL IN G-SPACE
C      ********************************
C
C      VQL(I,J)    PSEUDOPOTENTIAL FOR ATOM TYPE I AND
C                  G-VECTOR IN STAR G
C      DNC(I,J)    CORE CHARGE FOR ATOM TYPE I AND
C                  G-VECTOR IN STAR G
C      DVQLR(J)    REAL PART OF THE DERIVATIVE OF THE LOCAL PSEUDOPOTENTIAL
C                  FOR THE PROTOTYPE G-VECTOR IN STAR J
C      DVQLI(J)    IMAGINARY PART OF THE DERIVATIVE OF THE LOCAL PSEUDOPOTENTIAL
C                  FOR THE PROTOTYPE G-VECTOR IN STAR J
C      DDCR(J)     REAL PART OF THE DERIVATIVE OF THE CORE CHARGE DENSITY 
C                  FOR THE PROTOTYPE G-VECTOR IN STAR J
C      DDCI(J)     IMAGINARY PART OF THE DERIVATIVE OF THE CORE CHARGE DENSITY
C                  FOR THE PROTOTYPE G-VECTOR IN STAR J
C
       REAL*8 VQL(MXDTYP,MXDNST),DVQLR(MXDNST),DVQLI(MXDNST)
       REAL*8 DNC(MXDTYP,MXDNST),DDCR(MXDNST),DDCI(MXDNST)
C
C      NON-LOCAL PSEUDO-POTENTIAL IN G-SPACE
C      *************************************
C
C      VKB(I,L,K)  KB NONLOCAL PSEUDO. FOR ATOM K, ANG. MOM. L-1
C
       REAL*8 VKB(MXDLQP,4,MXDTYP)
C
C      ENERGY FORCES AND STRESSES
C      **************************
C
C      EALPHA      G=0 CONTRIBUTION TO THE TOTAL ENERGY.
C      ENEREW      EWALD ENERGY (HARTREE)
C      FORCEW(K,N,I)K-TH COMPONENT (IN CONTRAVARIANT LATTICE COORDINATES)  
C                  OF THE EWALD FORCE OF THE N-TH ATOM OF TYPE I (HARTREE/BOHR)
C      STREW(I,J)  CONTRIBUTION OF EWALD TO THE STRESS TENSOR (CONTRAVARIANT,HARTREE)
C      EXC         EXCHANGE AND CORRELATION ENERGY
C      RHOVXC      INTEGRAL OF RHO TIMES VXC
C      STRXC(I,J)  CONTRIBUTION OF EXCHAMGE AND CORRELATION TO THE STRESS TENSOR (CONTRAVARIANT,HARTREE)
C      ENERGY      TOTAL ELECTRONIC ENERGY
C      FORCE(K,N,I)K-TH COMPONENT (IN CONTRAVARIANT LATTICE COORDINATES)  
C                  OF THE FORCE OF THE N-TH ATOM OF TYPE I (HARTREE/BOHR)
C      STRESS(I,J) STRESS TENSOR (CONTRAVARIANT,HARTREE)
C
       REAL*8 EALPHA,alpha
       REAL*8 ENEREW,FORCEW(3,MXDATM,MXDTYP),STREW(3,3)
       REAL*8 EXC,STRXC(3,3),RHOVXC
       REAL*8 ENERGY,FORCE(3,MXDATM,MXDTYP),STRESS(3,3)
C
C      K-POINT DATA
C      ************
C
C      NX,NY,NZ    DIVISIONS OF BRILLOUIN ZONE
C      SX,SY,SZ    SHIFT OF POINT IN DIVISION OF BRILLOUIN ZONE
C      NRK         NUMBER OF K-POINTS FOR INTEGRATION IN TNE
C                  IRREDUCIBLE WEDGE OF THE BRILLOUIN ZONE
C      RK(J,I)     J-TH COMPONENT IN LATTICE COORDINATES OF THE
C                  I-TH K-POINT IN THE MESH
C      W(I)        WEIGHT IN THE INTEGRATION OF K-POINT I
C      NBAND(I)    NUMBER OF BANDS CONSIDERED FOR K-POINT I
C      INDK(J,I)   INDEX OF THE SIX K-POINTS NEIGHBOURING K-POINT I
C
       INTEGER NX,NY,NZ
       INTEGER NK(3),DIMWANN
       REAL*8 SX,SY,SZ
       REAL*8 S(3),WIN_MIN, WIN_MAX, FROZ_MIN, FROZ_MAX
       INTEGER NRK,NBAND(MXDNRK),INDK(6,MXDNRK)
       REAL*8 W(MXDNRK),RK(3,MXDNRK)
C
C      POTENTIAL IN THE FFT MESH
C      *************************
C
C      KMSCR(I)    MAX VALUE OF KGV(I,N) USED FOR THE POTENTIAL FFT MESH
C      VSCR(J)     SCREENED POTENTIAL IN THE FFT REAL SPACE MESH
C
       INTEGER KMSCR(3)
       REAL*8 VSCR(MXDFFT)
C
C      HAMILTONIAN FOR A GIVEN K-POINT
C      *******************************
C
C      HAMSMR(J)   REAL PART OF THE SMALL HAMILTONIAN. 
C      HAMSMI(J)   IMAGINARY PART OF THE SMALL HAMILTONIAN.
C      HDIAG(I)    HAMILTONIAN DIAGONAL FOR K+G-VECTOR I
C      QMOD(I)     LENGTH OF K+G-VECTOR I
C      EKPG(I)     KINETIC ENERGY (RYDBERG) OF K+G-VECTOR  I
C      ANLGAR(I,J) REAL PART OF THE SEPARABLE PSEUDOPOTENTIAL MATRIX
C                  FOR K+G-VECTOR I, PROJECTOR J
C      ANLGAI(I,J) IMAGINARY PART OF THE SEPARABLE PSEUDOPOTENTIAL MATRIX
C                  FOR K+G-VECTOR I, PROJECTOR J
C      XNLKB(I)    NORMALIZATION CONSTANT OF KB PROJECTOR I 
C
       REAL*8 HAMSMR(MXDSML,MXDSML),HAMSMI(MXDSML,MXDSML)
       REAL*8 HDIAG(MXDDIM),QMOD(MXDDIM),EKPG(MXDDIM)
       REAL*8 ANLGAR(MXDDIM,MXDANL),ANLGAI(MXDDIM,MXDANL),XNLKB(MXDANL)
C
C      EIGENVALUES ETC FOR A GIVEN K-POINT
C      ***********************************
C
C      EI(I)       EIGENVALUE NO. I.
C      EKN(I)      KINETIC ENERGY OF EIGENVECTOR I.
C      OCCP(J)     OCUPATION*WEIGHT*SPIN DEG. OF EIGENVECTOR J
C
       REAL*8 EKN(MXDBND),OCCP(MXDBND),EI(MXDDIM)
C
C      DIMENSIONS, EIGENVALUES, EIGENVECTORS, OCCUPATIONS FOR ALL K-POINTS
C      *******************************************************************
C
C      KMTXD(N)    DIMENSION OF THE HAMILTONIAN FOR K-POINT N
C      KISORT(I,N) G-VECTOR ASSOCIATED WITH K+G VECTOR I OF HAMILTONIAN
C                  FOR K-POINT N
C      EFERMI      EIGENVALUE OF HIGHEST OCCUPIED STATE OR FERMI ENERGY
C      ELECTS      ELECTRONIC TEMPERATURE*ENTROPY (HARTREE)
C      EL(J)       EIGENVALUE J, FOR ALL THE K-POINTS
C      EKL(J)      KINETIC ENERGY OF EIGENVALUE J, FOR ALL THE K-POINTS
C      FRAC(J)     FRACTIONAL OCUPATION OF LEVEL J
C      ZVECR(J,N)  REAL PART OF THE EIGENVECTORS FOR K-POINT N (PACKED STORAGE)
C      ZVECI(J,N)  IMAGINARY PART OF EIGENVECTORS FOR K-POINT N (PACKED STORAGE)
C
       INTEGER KMTXD(MXDNRK),KISORT(MXDDIM,MXDNRK)
       REAL*8 EFERMI,ELECTS 
       REAL*8 EL(MXDNRK*MXDBND),FRAC(MXDNRK*MXDBND),EKL(MXDNRK*MXDBND)
       REAL*8 YVECR(MXDDIM*MXDBND,MXDNRK),YVECI(MXDDIM*MXDBND,MXDNRK)
C
C      MATRIX FOR SCF POTENTIAL UPDATE
C      *******************************
C
       REAL*8 AMIX(MXDUPD,6*MXDSCF+5)
C
C      DIMENSIONS FOR WANNIER FUNCTIONS
C      ********************************
C
       INTEGER NFILE(MXDNRK)
       INTEGER INDXFROZ(MXDBND,MXDNRK),INDXNFROZ(MXDBND,MXDNRK)
       INTEGER MTXD_K(MXDNRK),NEIG_K(MXDNRK)
       INTEGER DIMFROZ(MXDNRK)

       REAL*8 XVECR(MXDDIM,MXDBND),XVECI(MXDDIM,MXDBND)
c      REAL*8 XVECR_K(MXDDIM,MXDBND,MXDNRK)
c      REAL*8 XVECI_K(MXDDIM,MXDBND,MXDNRK)
       REAL*8 XVECR_K(1,1,1)
       REAL*8 XVECI_K(1,1,1)
       REAL*8 EI_K(MXDDIM,MXDNRK)
c---------------------test-----------------
       REAL*8 RKPT(3)
       INTEGER NEIG
   
       LOGICAL FROZEN(MXDBND,MXDNRK)
C
C
C      WORK ARRAYS
C      ***********
C
       REAL*8 WRK(3,MXDATM,MXDTYP),WRK1(3,MXDATM,MXDTYP)
       INTEGER IWRK(MXDATM,MXDTYP),IWRK1(48,MXDATM,MXDTYP)
       REAL*8 WRK2(MXDGVE),WRK3(MXDGVE)
       REAL*8 WRK5(MXDTYP*MXDATM),WRK6(MXDTYP*MXDATM)
       REAL*8 WRK10(3,MXDTYP*MXDATM),WRK11(3,MXDTYP*MXDATM)
       REAL*8 CHDR(MXDFFT),CHDI(MXDFFT),WRK8(MXDWRK)
       REAL*8 WRK9(3,MXDPNT),WRKRV(10*MXDDIM)
       INTEGER IWRK9(MXDPNT),IWRKV1(MXDGVE),IWRKV2(MXDDIM)
       INTEGER IWRKV3(MXDNRK*MXDBND),IWRKV4(MXDNRK*MXDBND)
C
C      WORK ARRAYS FOR ITERATIVE DIAGONALIZATION
C      *****************************************
C
       REAL*8 TVECR(MXDSML*MXDSML),TVECI(MXDSML*MXDSML),TEY(MXDSML)
       REAL*8 HXVECR(MXDDIM*MXDBND),BASR(MXDDIM*MXDSML)
       REAL*8 HBASR(MXDDIM*MXDSML),VSMR(MXDSML,MXDSML)
       REAL*8 HXVECI(MXDDIM*MXDBND),BASI(MXDDIM*MXDSML)
       REAL*8 HBASI(MXDDIM*MXDSML),VSMI(MXDSML,MXDSML)
C
C      ARRAYS THAT ARE ALSO USED AS WORK ARRAYS
C      ****************************************
C
C      VSCR(MXDFFT),HAMSMR(MXDSML*MXDSML),HAMSMI(MXDSML*MXDSML)
C
       REAL*8 ZERO,PI,TWOPI
       PARAMETER (ZERO = 0.0D0)
       PARAMETER ( PI = 3.141592653589793D0, TWOPI = 2.0D0*PI)
C
       INTEGER IGUESS,IPR,ISYM,I,NBANDI
       REAL*8 T0,TIN,TOUT,TOL
       CHARACTER*(3) AUTHOR
       CHARACTER*6 FLGDIA
       CHARACTER*6 FLGPSD
c
c      print out dimension parameters
c
       print*, ' DIMENSION PARAMETERS '
       print*, '----------------------'
       print*,'MXDDIM ',MXDDIM
       print*,'MXDNRK ',MXDNRK
       print*,'MXDBND ',MXDBND
       print*,'MXDSML ',MXDSML
       print*,'MXDGVE ',MXDGVE
       print*,'MXDNST ',MXDNST
       print*,'MXDFFT ',MXDFFT
       print*,'MXDWRK ',MXDWRK
       print*,'MXDCUB ',MXDCUB
       print*,'MXDANL ',MXDANL
       print*,'MXDLQP ',MXDLQP
       print*,'MXDTYP ',MXDTYP
       print*,'MXDATM ',MXDATM
       print*,'MXDPNT ',MXDPNT
       print*,'MXDUPD ',MXDUPD
       print*,'MXDSCF ',MXDSCF
C
C      CHOOSE BETWEEN LDA AND GGA RECIPES
C
       AUTHOR = 'CA '
C      AUTHOR = 'PBE'
       ICORR = AUTHOR
C
       IPRGLOB = 3
       FLGPSD = 'PSEUKB'
       FLGDIA = 'JACOBI'
C
c ITMAX moved in dimension.inc
c      ITMAX = 10
       IGUESS = 0
       EPSCV = 0.00001
       EPSPSI = 0.00001
C      TELECK = ZERO
C
       CALL ZESEC(T0)
C
C      DRIVER PROGRAM VERSION
C
       VDRIV = '4.38'
C
       FLGDAL = '    '
C
C      OPEN INPUT AND OUTPUT FILES
C
       OPEN(UNIT=5,FILE='PW.DAT',STATUS='OLD',FORM='FORMATTED')
C      OPEN(UNIT=6,FILE='PW.OUT',STATUS='NEW',FORM='FORMATTED')
C
C      PRINTS TOP OF OUTPUT FILE
C
       CALL TPAGE(VDRIV)
C
C      GETS CRYSTAL DATA
C
       CALL READ_DATA(ADOT,
     1 NTYPE,NATOM,NAMEAT,RAT,ATMASS,
     2 MXDTYP,MXDATM)
C
       IPR = 1
       CALL PRINT_CRYSTAL(IPR,ADOT,NTYPE,NATOM,NAMEAT,RAT,
     2 MXDTYP,MXDATM)
C
C
       READ(5,*) EMAX, TELECK, alpha
       WRITE(6,106) EMAX, TELECK, alpha
C
       READ(5,*) NBANDI,NX,NY,NZ,SX,SY,SZ
       READ(5,*) (NK(I),I=1,3)
       READ(5,*) (S(I),I=1,3)
       READ(5,*) WIN_MIN,WIN_MAX
       READ(5,*) FROZ_MIN,FROZ_MAX,DIMWANN
C
       CLOSE(UNIT=5)
C
C      READS THE PSEUDOPOTENTIAL DATA
C
       IPR = 0
       IF(IPRGLOB .GT. 0) IPR = 1
C
       CALL PSEUKB(IPR,ICORR,EALRAW,
     2 NQ,DELQ,VKBRAW,NKB,VLOC,DCOR,DVAL,
     3 NTYPE,NATOM,NAMEAT,ZV,ZTOT,
     4 MXDTYP,MXDLQP)
C
C      CALCULATES THE SYMMETRY OPERATIONS
C
       ISYM = 1
       IPR = 0
       TOL = 1.0D-5
       IF(IPRGLOB .GT. 0) IPR = 1
C
       CALL SYM_IDENTIFY(ISYM,IPR,TOL,
     2 NTRANS,MTRX,TNP,
     3 ADOT,NTYPE,NATOM,RAT,
     4 WRK,WRK1,IWRK,IWRK1,
     5 MXDTYP,MXDATM)
C
C      CONSTRUCTS RECIPROCAL SPACE
C
       IPR = 0
       IF(IPRGLOB .GT. 0) IPR = 1
       IF(IPRGLOB .EQ. 4) IPR = 2
C
       CALL G_SPACE(IPR,EMAX,
     1 ADOT,NTRANS,MTRX,TNP,
     2 NG,KGV,PHASER,PHASEI,CONJ,
     2 INDS,KMAX,INDV,NS,MSTAR,EK,IZSTAR,
     3 WRK2,
     4 MXDGVE,MXDNST,MXDCUB)
C
C      GSPACE SIZE FOR DUAL SPACE METHOD
C
       IF(FLGDAL .EQ. 'DUAL') THEN
         KMSCR(1) = KMAX(1)/2 + 2
         KMSCR(2) = KMAX(2)/2 + 2
         KMSCR(3) = KMAX(3)/2 + 2
       ELSE
         KMSCR(1) = KMAX(1)
         KMSCR(2) = KMAX(2)
         KMSCR(3) = KMAX(3)
       ENDIF
C
C      CALCULATES THE STRUCTURE FACTORS
C
       CALL STRUCTURE_FACTOR(SR,SI,ICMPLX,
     1 NG,KGV,PHASER,PHASEI,CONJ,
     1 INDS,NS,
     2 NTYPE,NATOM,RAT,
     3 MXDTYP,MXDATM)
C
C      STARTING QUANTITIES ON G-VECTORS AND VCELL SCALING
C     
       CALL V_FIRST(NS,EK,SR,SI,
     2 VIONR,VIONI,DENCR,DENCI,DENSR,DENSI,
     3 NQ,DELQ,NKB,VKB,VKBRAW,VLOC,DCOR,DVAL,
     4 NTYPE,ADOT,
     5 EALPHA,EALRAW,
     6 VQL,DVQLR,DVQLI,DNC,DDCR,DDCI,
     7 MXDTYP,MXDLQP)
C
C      EWALD SUMS
C
       CALL EWALD_SUM(ENEREW,FORCEW,STREW,
     2 NTYPE,NATOM,RAT,ADOT,ZV,
     3 WRK,WRK1,WRK10,WRK11,WRK5,WRK6,
     4 MXDTYP,MXDATM)
C
       IPR = 0
       IF(IPRGLOB .GT. 2) IPR = 1
       IF(IPR .NE. 0) WRITE(6,*) '   EWALD'
       CALL PRINT_ENERGY(IPR,ADOT,NTYPE,NATOM,NAMEAT,
     2 FORCEW,ENEREW,STREW,
     3 MXDTYP,MXDATM)
C
C      EFFECTIVE POTENTIAL
C
       DO I=1,NS
         DENR(I) = DENSR(I)
         DENI(I) = DENSI(I)
       ENDDO
C
       IPR = 1
       IF(IPRGLOB .GT. 1) IPR = 1
C
       CALL V_HARTREE_XC( IPR, AUTHOR, EXC, STRXC, RHOVXC,
     2 VHARR, VHARI, VXCR, VXCI, 
     2 DENR, DENI, DENCR, DENCI,
     1 NG, KGV, PHASER, PHASEI, CONJ, INDS, KMAX, NS, MSTAR, EK,
     3 ADOT,
     4 CHDR, CHDI, WRK8,
     5 MXDFFT, MXDWRK )
C
C      CALCULATES INTEGRATION K-POINTS
C
       IPR = 0
       IF(IPRGLOB .GT. 0) IPR = 2
C
       CALL INTPNT(NBANDI,NX,NY,NZ,SX,SY,SZ,IPR,
     1 ADOT,
     2 NTRANS,MTRX,
     3 NRK,RK,W,NBAND,INDK,
     4 WRK9,IWRK9,
     5 MXDNRK,MXDBND,MXDPNT)
C
       CALL ZESEC(TIN)
       WRITE(6,250) TIN-T0
C
C      SELF-CONSISTENCY
C      ****************
C
C
       CALL SCFKB(EMAX,ITMAX,FLGPSD,FLGDIA,AUTHOR,IPRGLOB,
     2 EPSCV,EPSPSI,IGUESS,
     2 NG,KGV,PHASER,PHASEI,CONJ,
     2 INDS,KMAX,NS,MSTAR,INDV,EK,
     3 SR,SI,VIONR,VIONI,ICMPLX,
     4 NQ,DELQ,VKB,NKB,
     5 NTYPE,NATOM,RAT,ADOT,
     6 NRK,NBAND,RK,W,
     6 KMTXD,KISORT,HDIAG,QMOD,EKPG,EKN,
     6 YVECR,YVECI,EL,EKL,
     7 EFERMI,ZTOT,OCCP,FRAC,TELECK,ELECTS,
     7 EXC,STRXC,ENERGY,EALPHA,ENEREW,
     7 DENR,DENI,DENCR,DENCI,DENKR,DENKI,
     7 VHARR,VHARI,VXCR,VXCI,VEFFR,VEFFI,
     7 VHXCR,VHXCI,VHXCOUTR,VHXCOUTI,DELVHXCR,DELVHXCI,
     7 HAMSMR,HAMSMI,EI,
     8 ANLGAR,ANLGAI,XNLKB,
     9 VSCR,KMSCR,
     9 AMIX,alpha,
     9 WRK,WRK1,WRK2,WRK3,IWRKV1,
     1 TVECR,TVECI,TEY,
     2 HXVECR,HXVECI,BASR,BASI,HBASR,HBASI,VSMR,VSMI,
     3 IWRKV2,IWRKV3,IWRKV4,WRKRV,CHDR,CHDI,WRK8,
     4 MXDTYP,MXDATM,MXDLQP,MXDDIM,MXDANL,MXDBND,MXDFFT,
     5 MXDWRK,MXDSML,MXDUPD,MXDSCF)
C
C      FORCES AND STRESSES
C      *******************
C
       CALL FORCE_STRESS_KB(FORCE,STRESS,
     1 FORCEW,STREW,STRXC,EALPHA,FLGPSD,
     3 NTYPE,NATOM,NAMEAT,RAT,ADOT,
     2 NTRANS,MTRX,TNP,
     1 NG,KGV,PHASER,PHASEI,CONJ,NS,MSTAR,EK,
     4 NQ,DELQ,VKB,NKB,
     2 VIONR,VIONI,VHARR,VHARI,VXCR,VXCI,DENR,DENI,
     6 KMTXD,KISORT,
     6 YVECR,YVECI,
     7 OCCP,FRAC,
     8 ANLGAR,ANLGAI,XNLKB,
     4 VQL,DNC,DVQLR,DVQLI,DDCR,DDCI,
     6 NRK,NBAND,RK,W,
     6 CHDR,CHDI,WRK,WRK1,WRK10,WRK11,
     5 MXDTYP,MXDATM,MXDLQP,MXDANL,MXDDIM,MXDFFT,MXDBND)
C
C      OUTPUT FOR WANNIER FUNCTION CALCULATION
C
       WANNIER = 1
       IF(WANNIER.EQ.1) THEN

         CALL WANNIER_PREP(EMAX,FLGPSD,IGUESS,EPSPSI,
     2     NG,KGV,PHASER,PHASEI,CONJ,NS,INDS,KMAX,INDV,EK,
     3     SR,SI,VEFFR,VEFFI,ICMPLX,VKB,NKB,
     5     NTYPE,NATOM,RAT,ADOT,VIONR,VIONI,VHXCR,VHXCI,
     6     HDIAG,KISORT,QMOD,EKPG,XVECR,XVECI,XVECR_K,
     6     XVECI_K,EI_K,NFILE,INDXFROZ,INDXNFROZ,MTXD_K,NEIG_K,
     6     DIMFROZ,FROZEN,NQ,DELQ,
     6     EI,HAMSMR,HAMSMI,ANLGAR,ANLGAI,XNLKB,VSCR,KMSCR,
     9     WRK,WRK1,WRK2,IWRKV1,TVECR,TVECI,TEY,
     2     HXVECR,HXVECI,BASR,BASI,HBASR,HBASI,VSMR,VSMI,
     3     IWRKV2,WRKRV,CHDR,CHDI,WRK8,ZERO,
     4     MXDTYP,MXDATM,MXDLQP,MXDDIM,MXDANL,MXDBND,MXDFFT,
     5     MXDWRK,MXDSML,MXDPNT,MXDNST,IPRGLOB,
     5     NK,S,WIN_MIN,WIN_MAX,FROZ_MIN,FROZ_MAX,DIMWANN)

c        print*,'evecr and eveci'
c        do i=1,40
c           write(*,*) XVECR_K(i,1,1),XVECI_K(i,1,1)
c        end do

       ENDIF
C
       CALL ZESEC(TOUT)
       WRITE(6,300) TOUT-T0
C
       STOP
C
 100   FORMAT(2X,10F8.4)
 101   FORMAT(I5,15X,3I5,5X,3F5.2)
 105   FORMAT(1X,F9.4)
 106   FORMAT(/,'   EMAX = ',F9.4,' (HARTREE)',
     + ' --  ELEC. TEMP (K) ',F9.4,' -- MIXING',f9.4,/)
 200   FORMAT(/,'  COMPUTING TIME FOR ITERATION ',I5,3X,F10.2)
 250   FORMAT(/,'  COMPUTING TIME FOR STARTING ',3X,F10.2,/)
 300   FORMAT('  TOTAL COMPUTING TIME  ',F10.2)
 400   FORMAT('  E= ',F12.6)
       END
