#! /bin/sh
# This script is a generic wrapper for iotk.x
#
# if the first option is --iotk-exe,
#   then the second option is assumed to be the iotk.x executable and all the remaining options are passed.
# else, if the IOTK_EXE environment variable is defined,
#   then the iotk.x command will be executed as ${IOTK_EXE} .
# else, if the IOTK_ROOTDIR environment variable is defined,
#   then the iotk.x command will be executed as ${IOTK_ROOTDIR}/bin/iotk.x .
# else,
#   it will be executed as iotk.x (i.e. it has to be in the PATH)
# end if

# When a single instance of iotk library is available on a given machine,
# the user should define an environment variable IOTK_ROOTDIR as
# the name of the root directory of iotk, e.g.
#   export IOTK_ROOTDIR=${HOME}/S3DE/iotk/

# When different istances of iotk are available on the same machine
# (e.g. different versions or different compilers), the user can define aliases as:
#   alias iotk_g95 "iotk --iotk-exe ${HOME}/g95/S3DE/iotk/bin/iotk.x"
#   alias iotk_ifort "iotk --iotk-exe ${HOME}/ifort/S3DE/iotk/bin/iotk.x"

# search for the executable
if test "$1" = --iotk-exe
then
  shift
  EXEC="$1"
  shift
elif test -n "${IOTK_EXE}"
then
  EXEC="${IOTK_EXE}"
elif test -n "${IOTK_ROOTDIR}"
then
  EXEC="${IOTK_ROOTDIR}/bin/iotk.x"
else
  EXEC="iotk.x"
fi

# transfer of command-line arguments to standard input
# a pipe (|) is added at the end of each line to recognize line end,
# allowing for single items explicitily ending with one or more spaces
# the pipe is then removed inside the iotk.x parser.
for argument
do
  echo "$argument|"
done | ${EXEC}
